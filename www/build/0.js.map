{"version":3,"sources":["../../src/pages/leaderboard/leaderboard.module.ts","../../src/pages/leaderboard/leaderboard.ts","../../src/models/post-model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACA;AAUhD;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAe;aAChB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,qEAAe,CAAC;aAC1C;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZQ;AAC8D;AAElD;AAGwB;AACrB;AAES;AAChB;AACH;AAO/C;IAWE,yBAAmB,OAAsB,EACtB,SAAoB,EACpB,SAA0B,EAC1B,IAAkB,EAClB,WAA8B,EAC9B,IAAU;QALV,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,SAAI,GAAJ,IAAI,CAAc;QAClB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,SAAI,GAAJ,IAAI,CAAM;QAb7B,UAAK,GAAgB,EAAE,CAAC;QAIxB,WAAM,GAAY,KAAK,CAAC;QAExB,UAAK,GAAW,OAAO,CAAC;QAStB,sBAAsB;QACtB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,uEAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,mFAAgB,CAAC,IAAI,CAAC,CAAC;QAClF,2DAA2D;QAEvD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,EAAE;gBACpC,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,SAAS;aACvB,CAAC,CAAC;QAEP,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,QAAQ,GAAG,IAAI,+FAAmB,CACnC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,IAAI,CACZ,CAAC;YAEF,kBAAkB;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAED,wCAAc,GAAd;QAAA,iBAmBC;QAlBC,YAAY;QACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CACjB,iBAAO;oBAEH,uBAAuB;oBACvB,KAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;oBACjC,KAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC;oBAC1C,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBAEvC,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC;IACH,CAAC;IAED,0CAAgB,GAAhB;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAGD,mCAAS,GAAT;QACI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE3B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAED,gCAAM,GAAN;QAAA,iBAoBC;QAnBG,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACjC,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE,KAAK;SAClB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QAEjB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7B,cAAI;YACA,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CACvB,iBAAO;gBACH,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACV,KAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC;gBACD,MAAM,CAAC,UAAU,EAAE,CAAC;YAExB,CAAC,CAAC,CAAC;QACX,CAAC,CACJ;IAEL,CAAC;IAED,gCAAM,GAAN;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QACrE,6BAA6B;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACzD,CAAC;IAEC,mCAAS,GAAT,UAAU,SAAoB;QAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,iCAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,oCAAU,GAAV;QACI,IAAI,IAAI,GAAG,IAAI,qEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAExB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBACxC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE;oBAC9B,IAAI,EAAE,IAAI;iBACb,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAChC,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;QACP,CAAC;IAEL,CAAC;IAtIQ,eAAe;QAJ3B,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;6EAYyC;YACX,sEAAS;YACT,2EAAe;YACpB,wEAAY;YACL,oEAAiB;YACxB,IAAI;OAhBlB,eAAe,CAuI3B;IAAD,CAAC;AAAA;SAvIY,eAAe,e;;;;;;;;ACf5B;AAAA;IAOI,mBAAY,WAA6B;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAGL,gBAAC;AAAD,CAAC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LeaderboardPage } from './leaderboard';\n\n@NgModule({\n  declarations: [\n    LeaderboardPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LeaderboardPage),\n  ],\n})\nexport class LeaderboardPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaderboard/leaderboard.module.ts","import { Component } from '@angular/core';\nimport {\n    IonicPage, LoadingController,\n    NavController,\n    NavParams,\n    Refresher,\n    ToastController\n} from 'ionic-angular';\n\nimport { VenueModel } from \"../../models/venue-model\";\nimport { GameModel } from \"../../models/game-model\";\n\nimport { LeaderboardProvider } from \"../../providers/leaderboard/leaderboard\";\nimport { DataProvider } from \"../../providers/data/data\";\nimport { CompetitorModel } from \"../../models/competitor-model\";\nimport { LeaderboardModel } from \"../../models/leaderboard-model\";\nimport {PostModel} from \"../../models/post-model\";\nimport {User} from \"../../providers/user/user\";\n\n@IonicPage()\n@Component({\n  selector: 'page-leaderboard',\n  templateUrl: 'leaderboard.html',\n})\nexport class LeaderboardPage {\n\n  venue: VenueModel;\n  games: GameModel[] = [];\n  competitors: CompetitorModel[];\n  provider: LeaderboardProvider;\n  leaderboard: LeaderboardModel;\n  loaded: boolean = false;\n\n  board: string = \"posts\";\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public toastCtrl: ToastController,\n              public data: DataProvider,\n              public loadingCtrl: LoadingController,\n              public user: User) {\n\n    //Grab the leaderboard\n    this.venue = navParams.get('venue') || new VenueModel(null);\n    this.leaderboard = navParams.get('leaderboard') || new LeaderboardModel(null);\n//    console.log(this.leaderboard.name, this.leaderboard);\n\n    if (!this.leaderboard.nid) {\n\n        console.log('No leaderboard!');\n        this.navCtrl.setRoot('WelcomePage', {}, {\n            animate: true,\n            direction: 'forward'\n        });\n\n    } else {\n\n        this.provider = new LeaderboardProvider(\n            this.leaderboard,\n            this.data\n        );\n\n        //Hook up the list\n        this.attach();\n    }\n  }\n\n  ionViewDidLoad() {\n    //Load games\n    console.log('View loaded', this.loaded)\n    if (this.leaderboard.nid) {\n        if (this.loaded == false) {\n            console.log('Loading games');\n            this.loadGames().then(\n                message => {\n\n                    //Then set game players\n                    this.provider.associatePlayers();\n                    this.provider.loadCompetitorsAndMatches();\n                    this.provider.build();\n                    this.loaded = true;\n                    console.log('loaded', this.loaded);\n\n                });\n        }\n    }\n  }\n\n  ionViewWillEnter() {\n      this.attach();\n  }\n\n\n  loadGames(): Promise<string> {\n      console.log('loadGames()');\n\n      return this.provider.load();\n  }\n\n  update(){\n      let loader = this.loadingCtrl.create({\n          content: \"Updating...\",\n          duration: 10000\n      });\n      loader.present();\n\n      this.provider.getTimestamp().then(\n          data=> {\n              this.provider.update().then(\n                  success => {\n                      if (success) {\n                          this.attach();\n                      }\n                      loader.dismissAll();\n\n                  });\n          }\n      )\n\n  }\n\n  attach(){\n      this.games = null;\n      this.games = this.provider.attachGames();\n      console.log('Need a smarter ordering function when attaching');\n//      this.games.reverse();\n      this.competitors = null;\n      this.competitors = this.provider.attachCompetitors();\n  }\n\n    doRefresh(refresher: Refresher) {\n      this.update();\n    }\n\n    doReset(){\n      console.log('doReset()');\n      this.provider.reset();\n    }\n\n    doPostGame() {\n        let post = new PostModel(this.leaderboard);\n\n        if (this.user.loggedIn == true) {\n            if (this.user.profile.uid) {\n\n                let playerID = this.user.profile.player;\n                let challenger = post.leaderboard.membership.getPlayer(playerID);\n                post.challenger = challenger;\n                this.navCtrl.push('OpponentPage', {\n                    post: post\n                });\n            }\n        } else {\n            this.navCtrl.push('ChallengerPage', {\n                post: post\n            });\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaderboard/leaderboard.ts","import {LeaderboardModel} from \"./leaderboard-model\";\nimport {PlayerModel} from \"./player-model\";\n\nexport class PostModel {\n    leaderboard: LeaderboardModel;\n    challenger: PlayerModel;\n    opponent: PlayerModel;\n    status: string;\n    winner: number;\n\n    constructor(leaderboard: LeaderboardModel) {\n        this.leaderboard = leaderboard;\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/post-model.ts"],"sourceRoot":""}